name: Python tests

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: notes-app-db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - run: python -m pip install --upgrade pip
      - run: pip install -r backend/requirements.txt

      - name: Confirm Postgres is accepting connections
        run: |
          for i in {1..15}; do
            PGPASSWORD=postgres psql -h localhost -U postgres -d notes-app-db -c '\q' && break
            echo "Waiting for Postgres to accept connections..."
            sleep 2
          done

      - name: Run Alembic migrations
        run: |
          export PYTHONPATH=backend
          export DB_USER=postgres
          export DB_PASSWORD=postgres
          export DB_HOST=localhost
          export DB_PORT=5432
          export DB_NAME=notes-app-db
          export DB_SSL_MODE=disable
          export DB_POOL_MIN=1
          export DB_POOL_MAX=5
          export DB_TIMEOUT=10
          alembic -c backend/alembic.ini upgrade head


      - name: Run tests
        run: |
          export PYTHONPATH=backend
          export DB_USER=postgres
          export DB_PASSWORD=postgres
          export DB_HOST=localhost
          export DB_PORT=5432
          export DB_NAME=notes-app-db
          export DB_SSL_MODE=disable
          export DB_POOL_MIN=1
          export DB_POOL_MAX=5
          export DB_TIMEOUT=10
          pytest -v --cov=backend --cov-report=term-missing